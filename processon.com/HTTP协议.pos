{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"children":[{"parent":"root","children":[{"parent":"1c37398d7d0d","children":[{"parent":"90c391c20496","note":"","children":[{"parent":"d5b7e057f64f","children":[{"parent":"33493def48af","children":[],"id":"2055e37f6f9a","title":"POST"},{"parent":"33493def48af","children":[],"id":"7eb327e2a5d7","title":"GET"},{"parent":"33493def48af","children":[],"id":"fa57596a16a9","title":"PUT"},{"parent":"33493def48af","children":[],"id":"7aa0c5e46ab1","title":"DELETE"},{"parent":"33493def48af","children":[],"id":"d4271428a6b6","title":"OPTIONS"},{"parent":"33493def48af","children":[],"id":"343c821f39f7","title":"... ..."}],"id":"33493def48af","title":"请求方式","summaries":[]},{"parent":"d5b7e057f64f","children":[{"parent":"47c30f64dc06","children":[],"id":"6bc61e039252","title":"请求对应的路径"}],"id":"47c30f64dc06","title":"请求路径"},{"parent":"d5b7e057f64f","children":[{"parent":"78051ff97b0d","note":"- 1991年,原型版本，功能简陋，只有一个命令GET,只支持纯文本内容，该版本已过时","children":[],"id":"2b2543342ef5","title":"HTTP/0.9"},{"parent":"78051ff97b0d","note":"- 任何格式的内容都可以发送，这使得互联网不仅可以传输文字，还能传输图像、视频、二进制等文件。\n- 除了GET命令，还引入了POST命令和HEAD命令。\n- http请求和回应的格式改变，除了数据部分，每次通信都必须包括头信息（HTTP header），用来描述一些元数据。","children":[],"id":"d53edd9322f2","title":"HTTP/1.0"},{"parent":"78051ff97b0d","note":"- http1.1是目前最为主流的http协议版本，从1997年发布至今，仍是主流的http协议版本。\n- 引入了持久连接（ persistent connection），即TCP连接默认不关闭，可以被多个请求复用，不用声明Connection: keep-alive。\n- 引入了管道机制（ pipelining），即在同一个TCP连接里，客户端可以同时发送多个请求，进一步改进了HTTP协议的效率。\n- 新增方法：PUT、 PATCH、 OPTIONS、 DELETE。\n- http协议不带有状态，每次请求都必须附上所有信息。请求的很多字段都是重复的，浪费带宽，影响速度。","children":[],"id":"ed71c08f9576","title":"<span style=\"font-size: inherit;\">HTTP/1.1</span><br>"},{"parent":"78051ff97b0d","note":"- http/2是一个彻底的二进制协议，头信息和数据体都是二进制，并且统称为&quot;帧&quot;（frame）：头信息帧和数据帧。\n- 复用TCP连接，在一个连接里，客户端和浏览器都可以同时发送多个请求或回应，且不用按顺序一一对应，避免了队头堵塞的问题,此双向的实时通信称为多工（ Multiplexing）。\n- HTTP/2 允许服务器未经请求，主动向客户端发送资源，即服务器推送。\n- 引入头信息压缩机制（ header compression） ,头信息使用gzip或compress压缩后再发送。","children":[],"id":"d978ec64478f","title":"HTTP/2"}],"id":"78051ff97b0d","title":"请求协议"}],"id":"d5b7e057f64f","title":"请求行"},{"parent":"90c391c20496","children":[{"parent":"dcf471410804","children":[],"id":"f95a44e4da7f","title":"Host(必须)"},{"parent":"dcf471410804","children":[],"id":"e8727e4f31a3","title":"Cookie"},{"parent":"dcf471410804","children":[],"id":"6b266b712dc2","title":"... ..."}],"id":"dcf471410804","title":"请求头"},{"parent":"90c391c20496","children":[{"parent":"7b11ac88466d","children":[],"id":"4ab431eafd29","title":"JOSN"},{"parent":"7b11ac88466d","children":[],"id":"c4997006db0b","title":"XML"},{"parent":"7b11ac88466d","children":[],"id":"0eec73bd1a48","title":"... ..."}],"id":"7b11ac88466d","title":"请求体"}],"id":"90c391c20496","title":"HTTP请求","summaries":[{"summary":true,"parent":"90c391c20496","children":[],"range":"0,2","style":{"lineType":"curve_complex","lineColor":"#bf1e1b","lineWidth":"1"},"id":"7acb432ce3d5","title":"POST&nbsp;/mcp/pc/pcsearch&nbsp;HTTP/1.1<br>Host:&nbsp;ug.baidu.com<br>Connection:&nbsp;keep-alive<br>Content-Length:&nbsp;56<br>User-Agent:&nbsp;Mozilla/5.0&nbsp;(Windows&nbsp;NT&nbsp;10.0;&nbsp;Win64;&nbsp;x64)&nbsp;<br>Content-Type:&nbsp;application/json<br>Accept:&nbsp;*/*<br>Origin:&nbsp;https://www.baidu.com<br>Referer:&nbsp;https://www.baidu.com/s<br>Accept-Encoding:&nbsp;gzip,&nbsp;deflate,&nbsp;br<br>Accept-Language:&nbsp;zh-CN,zh;q=0.9<br>Cookie:&nbsp;BIDUPSID=F8AC8580DD5E030DA92D985C8B66689F<br><br>{\"invoke_info\":{\"pos_1\":[{}],\"pos_2\":[{}],\"pos_3\":[{}]}}<br>"}]},{"parent":"1c37398d7d0d","children":[{"parent":"9562583410a7","children":[{"parent":"5cb390f970e1","children":[{"parent":"eade6d4777d8","children":[],"id":"6eb30eb15bf6","title":"对应请求协议"}],"id":"eade6d4777d8","title":"协议版本"},{"parent":"5cb390f970e1","children":[{"parent":"dc7ec51aa330","children":[],"id":"06689342e4b2","title":"1XX：接收到请求，继续处理"},{"parent":"dc7ec51aa330","children":[],"id":"2008ac178114","title":"2XX：请求成功"},{"parent":"dc7ec51aa330","children":[],"id":"e81434af4ff1","title":"3XX：请求重定向"},{"parent":"dc7ec51aa330","children":[],"id":"dbfc07a327b7","title":"4XX：客户端请求错误"},{"parent":"dc7ec51aa330","children":[],"id":"9c4366867328","title":"5XX：服务端出现错误"}],"link":{"type":"url","title":"状态码描述","value":"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status"},"id":"dc7ec51aa330","title":"状态码"},{"parent":"5cb390f970e1","children":[{"parent":"ac34fd256cdd","children":[],"id":"4a10fef6c87c","title":"对于状态的描述信息"}],"id":"ac34fd256cdd","title":"状态文字"}],"id":"5cb390f970e1","title":"响应行"},{"parent":"9562583410a7","children":[{"parent":"cd78ed1e1fd5","children":[],"id":"a0e7c85c17cd","title":"Content-Type"},{"parent":"cd78ed1e1fd5","children":[],"id":"9b3aecb7600c","title":"Content-Length"},{"parent":"cd78ed1e1fd5","children":[],"id":"8472ca8c347a","title":"... ..."}],"id":"cd78ed1e1fd5","title":"响应头"},{"parent":"9562583410a7","children":[{"parent":"7a29ecf49d58","children":[],"id":"a686a65f23a9","title":"Text"},{"parent":"7a29ecf49d58","children":[],"id":"122ac84e9d6c","title":"... ..."}],"id":"7a29ecf49d58","title":"响应体"}],"id":"9562583410a7","title":"HTTP响应","summaries":[{"summary":true,"parent":"9562583410a7","children":[],"range":"0,2","style":{"lineType":"curve_complex","lineColor":"#bf1e1b","lineWidth":"1"},"id":"5ece3c4ecd39","title":"HTTP/1.1&nbsp;200&nbsp;OK<br>Access-Control-Allow-Credentials:&nbsp;true<br>Access-Control-Allow-Headers:&nbsp;Content-Type<br>Access-Control-Allow-Methods:&nbsp;POST,&nbsp;GET<br>Access-Control-Allow-Origin:&nbsp;https://www.baidu.com<br>Content-Length:&nbsp;130<br>Content-Type:&nbsp;application/json<br>Date:&nbsp;Mon,&nbsp;09&nbsp;May&nbsp;2022&nbsp;08:31:03&nbsp;GMT<br><br>{\"errno\":0,\"errmsg\":\"ok\",\"IsPrint\":false,\"data\":{\"log_id\":\"6138085063434710619\",\"action_rule\":{\"pos_1\":[],\"pos_2\":[],\"pos_3\":[]}}}<br>"}]}],"collapsed":false,"id":"1c37398d7d0d","title":"HTTP协议"},{"parent":"root","children":[{"parent":"b6198a814ed4","children":[{"parent":"1d0f36e78f42","children":[],"id":"26ab179d0320","title":"第三方可以获知通信内容。"}],"id":"1d0f36e78f42","title":"窃听风险"},{"parent":"b6198a814ed4","children":[{"parent":"afd62aeda13f","children":[],"id":"68c24e3cd8de","title":"第三方可以修改通信内容。"}],"id":"afd62aeda13f","title":"篡改风险"},{"parent":"b6198a814ed4","children":[{"parent":"b0429dbaa457","children":[],"id":"c945c272d4f0","title":"第三方可以冒充他人身份参与通信。"}],"id":"b0429dbaa457","title":"冒充风险"}],"id":"b6198a814ed4","title":"传输风险"},{"parent":"root","children":[{"parent":"1157cb178310","children":[],"id":"6c8ba1de39df","title":"HTTP+加密+认证+完整性保护&nbsp;=&nbsp;HTTPS"},{"parent":"1157cb178310","children":[{"parent":"d0e51170196c","children":[],"id":"49eb11a86484","title":"对称加密"},{"parent":"d0e51170196c","children":[{"parent":"d40d620a4b58","children":[],"id":"f0e570181270","title":"私钥签名"},{"parent":"d40d620a4b58","children":[],"id":"d86813ddc0b5","title":"公钥加密"}],"id":"d40d620a4b58","title":"非对称加密","summaries":[{"summary":true,"parent":"d40d620a4b58","children":[],"range":"0,1","style":{"lineType":"curve_complex","lineColor":"#bf1e1b","lineWidth":"1"},"id":"f393da66f5a9","title":"使用&nbsp;匹配的一对密钥&nbsp;来分别进行加密和解密，这两个秘钥是公开密钥（public&nbsp;key，简称公钥）和私有密钥（private&nbsp;key，简称私钥）<br><br>注意：公钥加密的数据&nbsp;只能&nbsp;用&nbsp;对应的私钥解密，同理，私钥加密的数据&nbsp;只能用&nbsp;对应的公钥解密<br><br>特点：安全性高<br><br>缺点：加解密复杂，效率低，耗时较长"}]}],"id":"d0e51170196c","title":"对称加密与非对称加密","summaries":[{"summary":true,"parent":"d0e51170196c","children":[],"range":"0,0","style":{"lineType":"curve_complex","lineColor":"#bf1e1b","lineWidth":"1"},"id":"cf2ac1bd9c9a","title":"特点：加解密使用相同秘钥高效，适用于大量数据的加密场景&nbsp;算法公开，安全性取决于秘钥大小，但秘钥越大效率越低，需要权衡在安全和效率中做权衡<br><br>缺点：算法本身安全，但使用场景不够安全，因为解密和加密都是同一个秘钥"}]},{"parent":"1157cb178310","image":{"w":900,"h":697.2103004291846,"url":"http://cdn.processon.com/6278f20ce401fd07202ff167?e=1652097052&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:C2ysq4SXcWAzTfmeXRZjD1fkJEc=","direction":"up"},"children":[],"id":"f2c270dc95c1","title":"原理"}],"id":"1157cb178310","title":"HTTPS协议"}],"root":true,"boundaries":[],"theme":"caihongpao","id":"root","title":"HTTP和HTTPS协议","structure":"mind_right"}},"meta":{"exportTime":"2022-05-09 18:53:05","member":"607408d45653bb5a00241b48","diagramInfo":{"creator":"607408d45653bb5a00241b48","created":"2022-05-09 16:06:09","modified":"2022-05-09 18:50:53","title":"HTTP协议","category":"outline"},"id":"6278cb71079129071103a3af","type":"ProcessOn Schema File","version":"1.0"}}